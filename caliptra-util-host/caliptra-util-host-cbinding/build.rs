use std::env;

fn main() {
    let crate_dir = env::var("CARGO_MANIFEST_DIR").unwrap();
    
    let config = cbindgen::Config {
        language: cbindgen::Language::C,
        header: Some("/* Caliptra Utility Host Library C API */\n#ifndef CALIPTRA_UTIL_HOST_H\n#define CALIPTRA_UTIL_HOST_H\n\n#ifdef __cplusplus\nextern \"C\" {\n#endif\n\n#include <stdint.h>\n#include <stdbool.h>\n#include <stddef.h>".to_string()),
        trailer: Some("\n#ifdef __cplusplus\n}\n#endif\n\n#endif /* CALIPTRA_UTIL_HOST_H */".to_string()),
        include_guard: Some("CALIPTRA_UTIL_HOST_H".to_string()),
        autogen_warning: Some("/* Warning, this file is autogenerated by cbindgen. Don't modify this manually. */".to_string()),
        style: cbindgen::Style::Both,
        tab_width: 4,
        ..Default::default()
    };
    
    cbindgen::generate_with_config(&crate_dir, config)
        .expect("Unable to generate bindings")
        .write_to_file("caliptra_util_host.h");
    
    println!("cargo:rerun-if-changed=src/lib.rs");
}